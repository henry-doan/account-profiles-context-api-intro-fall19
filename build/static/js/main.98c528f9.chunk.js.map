{"version":3,"sources":["providers/AccountProvider.js","components/accounts/Account.js","components/accounts/AccountForm.js","components/accounts/AccountProfile.js","components/shared/Navbar.js","App.js","providers/ItemProvider.js","index.js"],"names":["AccountContext","React","createContext","AccountConsumer","Consumer","AccountProvider","state","username","dateJoined","membershipLevel","updateAccount","account","setState","Provider","value","this","props","children","Component","Account","Card","Content","Header","Meta","AccountForm","handleChange","e","name","handleSubmit","preventDefault","Form","onSubmit","Input","label","type","onChange","Select","options","membershipOptions","Button","color","key","text","ConnectedAccountForm","AccountProfile","Navbar","Menu","to","Item","App","Container","exact","path","render","component","ItemContext","ItemProvider","todos","addItem","incommingTodo","updateTodo","id","item","axios","post","then","res","data","catch","err","console","log","put","map","t","deleteTodo","delete","filter","get","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.98c528f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// set up the initial context\nconst AccountContext = React.createContext();\n\n// create a exportable consumer that can be use in other components\nexport const AccountConsumer = AccountContext.Consumer;\n\n// define and ship out everything that needs to be global\nclass AccountProvider extends Component {\n  state = {\n    username: 'Fooman234',\n    dateJoined: '12/12/12',\n    membershipLevel: 'Silver',\n    updateAccount: (account) => this.updateAccount(account),\n  }\n\n  updateAccount = (account) => {\n    this.setState({ ...account })\n  }\n\n  render() {\n    return (\n      <AccountContext.Provider value={this.state}>\n        { this.props.children }\n      </AccountContext.Provider>\n    )\n  }\n}\n\nexport default AccountProvider;","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport { AccountConsumer } from '../../providers/AccountProvider';\n\nconst Account = () => (\n  <AccountConsumer>\n    { value => (\n      <Card>\n        <Card.Content>\n          <Card.Header>{ value.username }</Card.Header>\n          <Card.Meta>\n            Date Joined: { value.dateJoined }\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content>\n          <p>Membership Level: { value.membershipLevel }</p>\n        </Card.Content>\n      </Card>\n    )}\n  </AccountConsumer>\n)\n\nexport default Account;","import React, { Component } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { AccountConsumer } from '../../providers/AccountProvider';\n\nclass AccountForm extends Component {\n  state = { \n    username: this.props.username, \n    membershipLevel: this.props.membershipLevel \n  }\n\n  // handleChange = (e) => {\n  //   const { name, value } = e.target\n  //   this.setState({ [name]: value })\n  // }\n\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const account = { ...this.state }\n    this.props.updateAccount(account)\n  }\n\n  render() {\n    const { username, membershipLevel, } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Input\n          label=\"New Username\"\n          type=\"text\"\n          name=\"username\"\n          value={username}\n          onChange={this.handleChange}\n        />\n        <Form.Select\n          label=\"Membership Level\"\n          name=\"membershipLevel\"\n          value={membershipLevel}\n          onChange={this.handleChange}\n          options={membershipOptions}\n        />\n        <Form.Button color=\"blue\">Save</Form.Button>\n      </Form>\n    )\n  }\n}\n\nconst ConnectedAccountForm = (props) => {\n  return (\n    <AccountConsumer>\n      { value => (\n        <AccountForm \n          { ...props }\n          username={value.username}\n          membershipLevel={value.membershipLevel}\n          updateAccount={value.updateAccount}\n        />\n      )}\n    </AccountConsumer>\n  )\n}\n\nconst membershipOptions = [\n  { key: \"b\", text: \"Bronze\", value: \"Bronze\", },\n  { key: \"s\", text: \"Silver\", value: \"Silver\", },\n  { key: \"g\", text: \"Gold\", value: \"Gold\", },\n  { key: \"p\", text: \"Platinum\", value: \"Platinum\", },\n];\n\nexport default ConnectedAccountForm;","import React from 'react';\nimport Account from './Account';\nimport AccountForm from './AccountForm';\n\nconst AccountProfile = () => (\n  <>\n    <Account />\n    <AccountForm />\n  </>\n)\n\nexport default AccountProfile;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'semantic-ui-react';\nimport { AccountConsumer } from '../../providers/AccountProvider';\n\nconst Navbar = () => (\n  <AccountConsumer>\n    { value => (\n      <Menu>\n        <Link to='/'>\n          <Menu.Item>\n            Home\n          </Menu.Item>\n        </Link>\n        <Link to='/account/profile'>\n          <Menu.Item>\n            { value.username }\n          </Menu.Item>\n        </Link>\n      </Menu>\n    )}\n  </AccountConsumer>\n)\n\nexport default Navbar;","import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { Switch, Route } from 'react-router-dom';\nimport AccountProfile from './components/accounts/AccountProfile';\nimport Navbar from './components/shared/Navbar';\n\nconst App = () => (\n  <>\n    <Navbar />\n    <Container>\n      <Switch>\n        <Route exact path='/' render={ () => <div>Home Page</div> } />\n        <Route exact path='/account/profile' component={AccountProfile} />\n      </Switch>\n    </Container>\n  </>\n)\n\nexport default App;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst ItemContext = React.createContext();\n\nexport const ItemConsumer = ItemContext.Consumer;\n\nclass ItemProvider extends Component {\n  state = { todos: [],\n    addItem: (incommingTodo) => this.addItem(incommingTodo),\n    updateTodo: (id, item) => this.updateTodo(id, item),\n    // deletefunction here\n  }\n\n  componentDidMount() {\n    axios.get('/api/items')\n      .then( res => {\n        this.setState({ todos: res.data })\n      })\n      .catch( err => {\n         console.log(err)\n      })\n  }\n\n  addItem = (incommingTodo) => {\n    const item = incommingTodo\n    axios.post('/api/items', { item })\n      .then( res => {\n        const { todos } = this.state\n        this.setState({ todos: [ ...todos, res.data ] })\n      })\n      .catch( err => {\n        console.log(err)\n     })\n  }\n\n  updateTodo = (id, item) => {\n    axios.put(`/api/items/${id}`, { item })\n      .then( res => {\n        const todos = this.state.todos.map( t => {\n          if (t.id === id)\n            return res.data\n          return t\n        })\n        this.setState({ todos })\n      })\n      .catch( err => {\n        console.log(err)\n      })\n  }\n\n  deleteTodo = (id) => {\n    axios.delete(`/api/items/${id}`)\n      .then( res => {\n        const { todos } = this.state\n        this.setState({ todos: todos.filter( t => t.id !== id ) })\n      })\n      .catch( err => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    return (\n      <ItemContext.Provider value={this.state}>\n        { this.props.children }\n      </ItemContext.Provider>\n    )\n  }\n}\n\nexport default ItemProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport AccountProvider from './providers/AccountProvider';\nimport ItemProvider from './providers/ItemProvider';\nReactDOM.render(\n  <AccountProvider>\n    <ItemProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ItemProvider>\n  </AccountProvider>\n  \n  , \n  document.getElementById('root')\n);\n"],"sourceRoot":""}